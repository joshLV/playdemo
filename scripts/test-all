#!/usr/bin/env ruby

require 'popen4'
$stdout.sync = true

#test_passed_regex = /^~\s+(unit|functional|function|selenium)\/\w+\.{3}\s+PASSED/
#test_failed_regex = /^~\s+(unit|functional|function|selenium)\/\w+\.{3}\s+FAILED/
test_passed_regex = /PASSED/
test_failed_regex = /FAILED/
test_error_regex = /ERROR/

require 'pathname'
current_dir = Pathname.new(File.dirname(__FILE__)).parent.realpath

puts current_dir
failed_result = []
app_dirs = [
            'website/www',
            'website/home',
            'supplier/sales',
            'supplier/order',
            'supplier/home',
            'supplier/admin',
            'supplier/sms',
            'supplier/report',
            'cdn/image-server',
            'cdn/assets',
            'mq_consumer',
            'operate/report',
            'operate/admin',
            'operate/business',
            'operate/cms',
            'resale/home'
           ]


passed_hash = Hash.new(0)
failed_hash = Hash.new(0)

app_dirs.each do |dir|
  unless failed_result.size > 0
    # Dir.chdir("#{current_dir}/#{dir}")
    cmd =<<END
        cd #{current_dir}/#{dir}
        play clean;
        play auto-test --deps
END
    POpen4::popen4(cmd) { |stdout, stderr, stdin|
      stdout.each { |line|
        if line =~ test_passed_regex
          passed_hash[dir] += 1
        end
        if line =~ test_failed_regex or line =~ test_error_regex
          failed_hash[dir] += 1
          failed_result << "#{dir}: #{line}"
        end
        puts "#{line}"
      }
    }
  end
end

printf("=================== %s ====================\n", "Test Report")
printf("| %-30s | PASSED | FAILED |\n", "Project")
printf("----------------------------------------------------\n")
total_passed = 0
total_failed = 0
app_dirs.each do |dir|
  total_passed += passed_hash[dir]
  total_failed += failed_hash[dir]
  printf("| %-30s | %6d | %6d |\n", dir, passed_hash[dir], failed_hash[dir])
end
printf("----------------------------------------------------\n")
printf("| %-30s | %6d | %6d |\n", "Total", total_passed, total_failed)
printf("----------------------------------------------------\n")

system "#{current_dir}/selenium-clean.sh"

unless failed_result.empty?
  puts "Test Failured!"
  failed_result.each {|line| puts "    " + line}
  exit(1)
end
